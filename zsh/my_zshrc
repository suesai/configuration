# fish
export FISH_HOME="/opt/fish"

# gnupg
export GNUPGHOME="${XDG_CONFIG_HOME}/gnupg"

# go
export GOROOT="/opt/go"
export GOPATH="${HOME}/project/go"

# homebrew
export HOMEBREW_API_DOMAIN="https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles/api"
export HOMEBREW_BOTTLE_DOMAIN="https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles"
export HOMEBREW_BREW_GIT_REMOTE="https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git"
export HOMEBREW_CORE_GIT_REMOTE="https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git"

# kitty
export KITTY_HOME="/opt/kitty"

# nvidia
export __GL_SHADER_DISK_CACHE_PATH="${XDG_CACHE_HOME}/nv"

# nvim
export NVIM_HOME="/opt/nvim"

# nvm
export NVM_DIR="/opt/nvm"
export NODE_MIRROR="https://mirrors.tuna.tsinghua.edu.cn/nodejs-release/"
export NVM_NODEJS_ORG_MIRROR="https://mirrors.tuna.tsinghua.edu.cn/nodejs-release/"

# rust
export CARGO_HOME="/opt/cargo"
export RUSTUP_HOME="/opt/rustup"
export RUSTUP_DIST_SERVER="https://mirrors.tuna.tsinghua.edu.cn/rustup"
export RUSTUP_UPDATE_ROOT="https://mirrors.tuna.tsinghua.edu.cn/rustup/rustup"

# systemtap
export SYSTEMTAP_DIR="${XDG_CACHE_HOME}/systemtap"

# path
if [[ ":${PATH}:" != *":${CARGO_HOME}/bin:"* ]]; then
	export PATH="${PATH}:${CARGO_HOME}/bin:${FISH_HOME}/bin:${GOROOT}/bin:${KITTY_HOME}/bin:${NVIM_HOME}/bin"
fi

# man
export MANPAGER="sh -c 'col -bx | bat -l man --style=plain --paging=always'"
export MANROFFOPT="-c"
export MANPATH=":${FISH_HOME}/share/man:${KITTY_HOME}/share/man:${NVIM_HOME}/share/man"

# language
export LC_ALL="en_US.UTF-8"
export LANG="en_US.UTF-8"
export LANGUAGE="en_US.UTF-8"

# zsh
export EDITOR="nvim"
export ZSH="/usr/share/oh-my-zsh"
export ZSH_CUSTOM="${ZSH}/custom"
export ZSHZ_DATA="${ZSH_CACHE_DIR}/z"

ZSH_THEME="ss"

# zstyle ':omz:update' mode disabled

# every shell has its history
SAVEHIST=40960
HISTSIZE=40960
HISTFILE="${ZSH_CACHE_DIR}/zsh_history"
HIST_STAMPS="%Y-%m-%d %H:%M:%S"

plugins=(git extract z zsh-autosuggestions zsh-syntax-highlighting)

source "${ZSH}/oh-my-zsh.sh"
source "/etc/zsh/my_completion.zsh"

setopt   EXTENDED_HISTORY
setopt   INC_APPEND_HISTORY_TIME
unsetopt APPEND_HISTORY
unsetopt SHARE_HISTORY
unsetopt INC_APPEND_HISTORY

# alais
alias ll="eza --color=always --icons=always --git -ilbSh"
alias l="eza --color=always --icons=always"
alias lt="eza --color=always --icons=always -T"
alias proxyhp="export http_proxy=http://192.168.0.109:8800 https_proxy=http://192.168.0.109:8800 no_proxy=127.0.0.1,localhost"
alias unproxyhp="unset http_proxy https_proxy no_proxy"
alias -g -- --help='--help 2>&1 | bat -l help --style=plain --paging=always'

# escape q or alt q to edit muliple line
bindkey "^[q" push-line-or-edit
# ctrl u to cut words before cursor
bindkey "^u"  backward-kill-line
# escape l or alt l to lower case
bindkey "^[l" down-case-word

# fzf
export FZF_DEFAULT_COMMAND="fd --hidden --strip-cwd-prefix --exclude .git"
export FZF_CTRL_T_COMMAND=
export FZF_ALT_C_COMMAND=
eval "$(fzf --zsh)"

_fzf_compgen_path() {
	fd --hidden --exclude .git . "$1"
}

_fzf_compgen_dir() {
	fd --type=d --hidden --exclude .git . "$1"
}

_fzf_complete_alias() {
	_fzf_complete +m -- "$@" < <(
		alias | sed 's/=.*//'
	)
}

_fzf_complete_unalias() {
	_fzf_complete -m -- "$@" < <(
		alias | sed 's/=.*//'
	)
}

_fzf_comprun() {
	local command="$1"
	shift

	case "$command" in
		vim|view|nvim|cat|bat) fzf --preview 'if [ -f {} ]; then bat -n --color=always --line-range :500 {}; fi' "$@" ;;
		export|unset)          fzf --preview "eval 'echo \${}'" "$@" ;;
		cd|ls)                 fzf --preview 'if [ -d {} ]; then eza --tree --color=always --icons=always {} | head -200; fi' "$@" ;;
		ssh)                   fzf --preview 'dig {}' "$@" ;;
		*)                     fzf "$@" ;;
	esac
}

fzf-history-widget() {
	local selected num

	setopt localoptions noglobsubst noposixbuiltins pipefail no_aliases 2> /dev/null

	selected="$(fc -rlD -t '%Y-%m-%d %H:%M:%S' 1 | awk '{ cmd=$0; sub(/^[ \t]*[0-9]+\**[ \t]+/, "", cmd); if (!seen[cmd]++) print $0 }' |
		FZF_DEFAULT_OPTS=$(__fzf_defaults "" "-n2..,.. --scheme=history --bind=ctrl-r:toggle-sort ${FZF_CTRL_R_OPTS-} --query=${(qqq)LBUFFER} +m") \
		FZF_DEFAULT_OPTS_FILE='' $(__fzfcmd))"
	local ret=$?

	if [ -n "$selected" ]; then
	num=$(awk '{print $1}' <<< "$selected")
	if [[ "$num" =~ '^[1-9][0-9]*\*?$' ]]; then
		zle vi-fetch-history -n ${num%\*}
	else # selected is a custom query, not from history
		LBUFFER="$selected"
	fi
	fi

	zle reset-prompt

	return $ret
}

lsps () {
	local pid thread args other_args ps_out

	while [[ $# -gt 0 ]]; do
		if [[ "$1" == "-t" ]]; then
			thread="1"
		elif [[ "$1" == "-p" ]]; then
			shift
			pid="$1"
		else
			other_args="${other_args} $1"
		fi
		shift
	done

	if [[ -n "${thread}" ]] && [[ -n "${pid}" ]]; then
		args="-L -o pid,ppid,pgid,nlwp,lwp,euser,etime:12,time:12,rss:8,wchan:16,stat:5,command -p ${pid}"
	elif [[ -n "${thread}" ]]; then
		args="-eL -o pid,ppid,pgid,nlwp,lwp,euser,etime:12,time:12,rss:8,wchan:16,stat:5,command"
	elif [[ -n "${pid}" ]]; then
		args="-o pid,ppid,pgid,nlwp,euser,etime:12,time:12,rss:8,wchan:16,stat:5,command -p ${pid}"
	else
		args="-e -o pid,ppid,pgid,nlwp,euser,etime:12,time:12,rss:8,wchan:16,stat:5,command"
	fi

	ps_out="$(eval ps "${args}" "${other_args}")"
	head -n 1 <<<"${ps_out}" 1>&2
	tail -n +2 <<<"${ps_out}"
}

tailog() {
	local file="$1"

	if [[ ! -e "${file}" ]]; then
		echo "usage: tailog file"
		return 22
	fi

	tail -F "${file}" | BAT_THEME=base16 bat -pp -l log
}

hist() {
	fc -lD -t '%Y-%m-%d %H:%M:%S' -1 0
}

[ -s "${NVM_DIR}/nvm.sh" ] && \. "${NVM_DIR}/nvm.sh"
hash thefuck &>/dev/null && eval "$(thefuck --alias)"
