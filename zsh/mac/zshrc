# go
export GOPATH="${HOME}/project/go"

# homebrew
eval $(/opt/homebrew/bin/brew shellenv)
export HOMEBREW_API_DOMAIN="https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles/api"
export HOMEBREW_BOTTLE_DOMAIN="https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles"
export HOMEBREW_BREW_GIT_REMOTE="https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git"
export HOMEBREW_CORE_GIT_REMOTE="https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git"
export HOMEBREW_PIP_INDEX_URL="https://mirrors.tuna.tsinghua.edu.cn/pypi/web/simple"

# lazygit
export LG_CONFIG_FILE="${HOME}/.config/lazygit/config.yml"

# nvm
export NODE_MIRROR="https://mirrors.tuna.tsinghua.edu.cn/nodejs-release/"
export NODE_REPL_HISTORY="${HOME}/.cache/node/node_repl_history"
export NVM_NODEJS_ORG_MIRROR="https://mirrors.tuna.tsinghua.edu.cn/nodejs-release/"

# rust
export CARGO_HOME="${HOME}/.local/share/cargo"
export RUSTUP_HOME="${HOME}/.local/share/rustup"
export RUSTUP_DIST_SERVER="https://mirrors.tuna.tsinghua.edu.cn/rustup"
export RUSTUP_UPDATE_ROOT="https://mirrors.tuna.tsinghua.edu.cn/rustup/rustup"

# path
if [[ ":${PATH}:" != *":${GOPATH}/bin:"* ]]; then
	export PATH="${PATH}:${GOPATH}/bin"
fi

# man
export MANPAGER="sh -c 'col -bx | bat -l man --style=plain --paging=always'"
export MANROFFOPT="-c"

# language
export LC_ALL="en_US.UTF-8"
export LANG="en_US.UTF-8"
export LANGUAGE="en_US.UTF-8"

# zsh
export EDITOR="nvim"
export ZSH="${HOME}/.config/oh-my-zsh"
export ZSH_CUSTOM="${ZSH}/custom"
export ZSHZ_DATA="${ZSH_CACHE_DIR}/z"

ZSH_THEME="ss"

# zstyle ':omz:update' mode disabled

# every shell has its history
SAVEHIST=40960
HISTSIZE=40960
HISTFILE="${ZSH_CACHE_DIR}/zsh_history"
HIST_STAMPS="%Y-%m-%d %H:%M:%S"

plugins=(git extract zsh-autosuggestions zsh-syntax-highlighting)

source "${ZSH}/oh-my-zsh.sh"
source "${ZDOTDIR}/completion.zsh"

setopt   EXTENDED_HISTORY
setopt   INC_APPEND_HISTORY_TIME
unsetopt APPEND_HISTORY
unsetopt SHARE_HISTORY
unsetopt INC_APPEND_HISTORY

# alais
alias ll="eza --color=always --icons=always --git -ilbSh"
alias ls="eza --color=always --icons=always"
alias lt="eza --color=always --icons=always -T"
alias -g -- --help='--help 2>&1 | bat -l help --style=plain --paging=never'

# escape q or alt q to edit muliple line
bindkey "^[q" push-line-or-edit
# ctrl u to cut words before cursor
bindkey "^u"  backward-kill-line
# escape l or alt l to lower case
bindkey "^[l" down-case-word

# fzf
export FZF_DEFAULT_COMMAND="fd --hidden --strip-cwd-prefix --exclude .git"
export FZF_CTRL_T_COMMAND=
export FZF_ALT_C_COMMAND=
eval "$(fzf --zsh)"

_fzf_compgen_path() {
	fd --hidden --exclude .git . "$1"
}

_fzf_compgen_dir() {
	fd --type=d --hidden --exclude .git . "$1"
}

_fzf_complete_alias() {
	_fzf_complete +m -- "$@" < <(
		alias | sed 's/=.*//'
	)
}

_fzf_complete_unalias() {
	_fzf_complete -m -- "$@" < <(
		alias | sed 's/=.*//'
	)
}

_fzf_comprun() {
	local command="$1"
	shift

	case "$command" in
		vim|view|nvim|cat|bat) fzf --preview 'if [ -f {} ]; then bat -n --color=always --line-range :500 {}; fi' "$@" ;;
		export|unset)          fzf --preview "eval 'echo \${}'" "$@" ;;
		cd|ls)                 fzf --preview 'if [ -d {} ]; then eza --tree --color=always --icons=always {} | head -200; fi' "$@" ;;
		ssh)                   fzf --preview 'dig {}' "$@" ;;
		*)                     fzf "$@" ;;
	esac
}

fzf-history-widget() {
	local selected num

	setopt localoptions noglobsubst noposixbuiltins pipefail no_aliases 2> /dev/null

	selected="$(fc -rlD -t '%Y-%m-%d %H:%M:%S' 1 | awk '{ cmd=$0; sub(/^[ \t]*[0-9]+\**[ \t]+/, "", cmd); if (!seen[cmd]++) print $0 }' |
		FZF_DEFAULT_OPTS=$(__fzf_defaults "" "-n2..,.. --scheme=history --bind=ctrl-r:toggle-sort ${FZF_CTRL_R_OPTS-} --query=${(qqq)LBUFFER} +m") \
		FZF_DEFAULT_OPTS_FILE='' $(__fzfcmd))"
	local ret=$?

	if [ -n "$selected" ]; then
		num=$(awk '{print $1}' <<< "$selected")
		if [[ "$num" =~ '^[1-9][0-9]*\*?$' ]]; then
			zle vi-fetch-history -n ${num%\*}
		else # selected is a custom query, not from history
			LBUFFER="$selected"
		fi
	fi

	zle reset-prompt

	return $ret
}

duf() {
	command duf -output mountpoint,size,used,avail,usage,inodes,inodes_usage,type,filesystem -only local,network,fuse,binds,loops "$@"
}

hist() {
	fc -lD -t '%Y-%m-%d %H:%M:%S' -1 0
}

lg() {
	lazygit "$@"
}

lscmd() {
	local cmd paths

	cmd="$1"
	if [[ -z "${cmd}" ]]; then
		echo "usage: lscmd cmd"
		return 22
	fi

	IFS=':' read -ra paths <<<"${PATH}"
	for path in "${paths[@]}"; do
		if [[ -d "${path}" ]]; then
			fd ".*${cmd}.*" -t x -t f "${path}"
		fi
	done
}

lsps () {
	local pid args other_args ps_out

	while [[ $# -gt 0 ]]; do
		if [[ "$1" == "-p" ]]; then
			shift
			pid="$1"
		else
			other_args="${other_args} $1"
		fi
		shift
	done

	if [[ -n "${pid}" ]]; then
		args="-o pid,ppid,pgid,user,etime,time,rss,wchan,stat,command -p ${pid}"
	else
		args="-e -o pid,ppid,pgid,user,etime,time,rss,wchan,stat,command"
	fi

	ps_out="$(eval ps "${args}" "${other_args}")"
	head -n 1 <<<"${ps_out}" 1>&2
	tail -n +2 <<<"${ps_out}"
}

proxyhp() {
	export http_proxy="http://127.0.0.1:7897" https_proxy="http://127.0.0.1:7897" ftp_proxy="http://127.0.0.1:7897" no_proxy="127.0.0.1,localhost"
}

unproxyhp() {
	unset http_proxy https_proxy no_proxy
}

tailog() {
	local file="$1"

	if [[ ! -e "${file}" ]]; then
		echo "usage: tailog file"
		return 22
	fi

	tail -F "${file}" | BAT_THEME="base16-256" bat -p -l log
}

y() {
	local tmp="$(mktemp -t "yazi-cwd.XXXXXX")" cwd
	yazi "$@" --cwd-file="$tmp"
	IFS= read -r -d '' cwd < "$tmp"
	[ -n "$cwd" ] && [ "$cwd" != "$PWD" ] && builtin cd -- "$cwd"
	rm -f -- "$tmp"
}

[ -s "${CARGO_HOME}/env" ] && \. "${CARGO_HOME}/env"
[ -s "${NVM_DIR}/nvm.sh" ] && \. "${NVM_DIR}/nvm.sh"
hash thefuck &>/dev/null && eval "$(thefuck --alias)"
hash zoxide &>/dev/null && eval "$(zoxide init --cmd cd zsh)"
